name: Infrastructure Destruction

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
          - staging
          - production
      confirm_destroy:
        description: 'Type "DESTROY" to confirm'
        required: true

env:
  AWS_REGION: ap-south-1
  TF_VERSION: 1.8.5

jobs:
  validate-destruction:
    runs-on: ubuntu-latest
    steps:
      - name: Validate destruction
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "‚ùå Must type 'DESTROY' to proceed"
            exit 1
          fi

  destroy-kubernetes:
    name: Destroy Kubernetes Resources
    runs-on: ubuntu-latest
    needs: validate-destruction
    defaults:
      run:
        working-directory: ./infra/stage-2-kubernetes
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Destroy Kubernetes resources
        run: |
          terraform init \
            -backend-config="bucket=bankapp-terraform-state-2024" \
            -backend-config="key=stage-2-${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=terraform-state-lock-${{ github.event.inputs.environment }}"
          
          terraform destroy -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="project_name=bankapp" \
            -var="environment=${{ github.event.inputs.environment }}" \
            -var="namespace=bankapp-${{ github.event.inputs.environment }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}"

  destroy-aws:
    name: Destroy AWS Infrastructure
    runs-on: ubuntu-latest
    needs:
      - validate-destruction
      - destroy-kubernetes
    defaults:
      run:
        working-directory: ./infra/stage-1-aws
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Destroy AWS infrastructure
        run: |
          terraform init \
            -backend-config="bucket=bankapp-terraform-state-2024" \
            -backend-config="key=stage-1-${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=terraform-state-lock-${{ github.event.inputs.environment }}"
          
          # Clean up target group dependencies
          bash ../../.github/scripts/terraform-cleanup/handle-tg-deletion.sh "${{ github.event.inputs.environment }}" "${{ env.AWS_REGION }}" || true
          
          # Specific order for ALB resources
          terraform destroy -target=aws_lb_listener.app_listener -auto-approve || true
          terraform destroy -target=aws_lb_target_group.app_tg -auto-approve || true
          terraform destroy -target=aws_lb.app_alb -auto-approve || true
          
          # Destroy everything else
          terraform destroy -auto-approve