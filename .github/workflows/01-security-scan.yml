name: Security Scan

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight

jobs:
  security-checks:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cat << EOF > sonar-project.properties
          sonar.host.url=https://sonarcloud.io
          sonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          sonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          sonar.java.binaries=target/classes
          sonar.java.test.binaries=target/test-classes
          sonar.java.source=17
          sonar.sources=src/main/java
          sonar.tests=src/test/java
          sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          sonar.junit.reportPaths=target/surefire-reports
          EOF

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
      - name: Check SonarCloud Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln,secret,config'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
